version: '3.4'

services:
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: Api/Dockerfile
    networks:
      - net
  sqlserver:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server
    ports:
      - 1433:1433
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Local1234
    volumes:
      - C:/ReposSql/SQL/data:/var/opt/mssql/data
      - C:/ReposSql/SQL/log:/var/opt/mssql/log
      - C:/ReposSql/SQL/secrets:/var/opt/mssql/secrets
    networks:
      - net
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - net
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks: 
    - net
    ports:
    - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    networks: 
    - net
    depends_on:
    - zookeeper
    ports:
    - 9092:9092
    - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  elasticsearch-data:

networks:
  net:
    driver: bridge